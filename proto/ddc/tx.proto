syntax = "proto3";
package bianjieai.ddc;

import "gogoproto/gogo.proto";
import "ddc/ddc.proto";

option go_package = "github.com/bianjieai/ddc-go/ddc";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the node Msg service.
service Msg {
    // CreateValidator defines a method for creating a validator.
    rpc AddAccount(MsgAddAccount) returns (MsgAddAccountResponse);
    rpc AddBatchAccount(MsgAddBatchAccount) returns (MsgAddBatchAccountResponse);
}

// MsgAddAccount defines the Msg/AddAccount request type.
message MsgAddAccount {
    option (gogoproto.equal) = true;

    string address        = 1;
    string did         	  = 2;
    string name        	  = 3;
    Role   role			  = 4;
    string leader_did 	  = 5;
    string sender         = 6;
}

// MsgAddAccountResponse defines the Msg/AddAccount response type.
message MsgAddAccountResponse {
    option (gogoproto.equal) = true;
}

// MsgAddBatchAccount defines the Msg/MsgAddBatchAccount request type.
message MsgAddBatchAccount {
    option (gogoproto.equal) = true;

    repeated string address       = 1;
    repeated string did           = 2;
    repeated string name          = 3;
    repeated Role   role		  = 4;
    repeated string leader_did 	  = 5;
    string sender                 = 6;
}

// MsgAddBatchAccountResponse defines the Msg/MsgAddBatchAccount response type.
message MsgAddBatchAccountResponse {
    option (gogoproto.equal) = true;
}